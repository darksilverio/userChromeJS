/*附加组件显示版本号*/
@-moz-document url(about:addons) {
    #search-list .addon:not([type="userstyle"])[status="installed"] .name-container > spacer,
    #addon-list .addon:not([type="userstyle"])[status="installed"] .name-container > spacer {
        -moz-binding: url('data:application/xml,\
\
<?xml version="1.0"?>\%0A\
<bindings xmlns="http://www.mozilla.org/xbl">\%0A\
    <binding id="addonversion">\%0A\
        <implementation>\%0A\
            <constructor>\%0A\
                <![CDATA[\%0A\
                    var richlistitem = document.getBindingParent(this);\%0A\
\%0A\
                    var nameLabel = document.getAnonymousElementByAttribute(richlistitem, "anonid", "name");\%0A\
                    var label = richlistitem._version = document.createElement("label");\%0A\
                    label.setAttribute("anonid", label.className = "version");\%0A\
                    this.parentNode.insertBefore(label, nameLabel.nextSibling);\%0A\
                    var addon = richlistitem.mAddon;\%0A\
                    shouldShowVersionNumber(addon) ? label.value = addon.version : label.hidden = true;\%0A\
\%0A\
                    var str = \'this._icon.src = "";\\n\';\%0A\
                    richlistitem._initWithAddon = eval(`(${\%0A\
                        String.replace(richlistitem._initWithAddon, str, [str,\%0A\
                            "          if (shouldShowVersionNumber(this.mAddon))",\%0A\
                            "            this._version.value = this.mAddon.version;",\%0A\
                            "          else",\%0A\
                            "            this._version.hidden = true;\\n"\%0A\
                        ].join("\\n"))\%0A\
                    })`);\%0A\
                    str = \'this._showStatus("update-available");\\n\';\%0A\
                    richlistitem.onNewInstall = eval(`(${\%0A\
                        String.replace(richlistitem.onNewInstall, str, str +\%0A\
                            "          this._updateUpgradeInfo();"\%0A\
                        )\%0A\
                    })`);\%0A\
                    richlistitem._updateUpgradeInfo = function _updateUpgradeInfo() {\%0A\
                        // Only update the version string if we\'re displaying the upgrade info\%0A\
                        if (this.hasAttribute("upgrade") && shouldShowVersionNumber(this.mAddon))\%0A\
                            this._version.value = this.mManualUpdate.version;\%0A\
                    }\%0A\
                ]]>\%0A\
            </constructor>\%0A\
        </implementation>\%0A\
    </binding>\%0A\
</bindings>\
\
') !important;
    }
  
}


/* 附加管理器 显示计数*/
	.addon {
		counter-increment: addoncount !important;
		content: counter(addoncount) !important;
	}

	.addon:first-child {
		counter-reset: addoncount !important;
	}

	.addon[active="false"] {
		counter-increment: disabled !important;
	}

	#addon-list:after {
		content: "[ "counter(addoncount)" 啟用 | "counter(disabled)" 禁用 ]" !important;
		position: fixed !important;
		top: 10px !important;
		left: 10px !important;
		cursor: default;
		white-space: nowrap !important;
		color: white !important;
	}
	
/* 显示ID*/
	.addon[selected="true"]::after {
		content: " ID : " attr(value) !important;
		position: relative !important;
		margin-left: 30px !important;
		color: red !important;
		cursor: default;
	}
	
/*显示更新日期*/
	#list-view:not([type="userstyle"])#list-view:not([type="userchromejs"])
#addon-list .date-updated {
		display: -moz-box !important;
		color: green !important;
	}